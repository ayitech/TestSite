{"version":3,"sources":["index.js"],"names":["myfirstelement","ReactDOM","render","document","getElementById","MyForm","resetForm","setState","name","phone","email","message","errors","handleSubmit","e","preventDefault","state","length","push","match","validate","result","fetch","method","mode","headers","body","JSON","stringify","senderEmail","senderName","senderPhone","emailTo","console","log","alert","curDateTime","Date","toLocaleString","this","onSubmit","map","error","class","for","value","onChange","evt","target","type","required","rows","React","Component"],"mappings":"+NAMMA,G,MAAiB,+CACvBC,IAASC,OAAOF,EAAgBG,SAASC,eAAe,S,IAGlDC,E,kDAGL,aAAe,IAAD,8BACb,gBAWDC,UAAY,WACX,EAAKC,SAAS,CACbC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,QAAS,GAETC,OAAQ,MAnBI,EAwBdC,aAAe,SAAAC,GACdA,EAAEC,iBADiB,MAGqB,EAAKC,MAArCR,EAHW,EAGXA,KAAMC,EAHK,EAGLA,MAAOC,EAHF,EAGEA,MAAOC,EAHT,EAGSA,QAEtBC,EAoHR,SAAkBJ,EAAME,EAAOC,GAG9B,IAAMC,EAAS,GAEK,IAAhBJ,EAAKS,QACRL,EAAOM,KAAK,sBAGTR,EAAMO,OAAS,IAAMP,EAAMS,MAAM,0CACpCP,EAAOM,KAAK,sCAGTP,EAAQM,OAAS,GACpBL,EAAOM,KAAK,wBAGb,OAAON,EArISQ,CAASZ,EAAME,EAAOC,GACrC,GAAIC,EAAOK,OAAS,EACnB,EAAKV,SAAS,CAAEK,eADjB,CAMA,IAoBC,IAAIS,EAASC,MAAM,qDAAsD,CACxEC,OAAQ,OACRC,KAAM,UACNC,QAAS,CACR,OAAU,mBACV,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAU,CACpBjB,QAASA,EACTkB,YAAanB,EACboB,WAAYtB,EACZuB,YAAatB,EACbuB,QAAS,8BAIXC,QAAQC,IAAIb,EAAS,UAAYb,EAAO,iCACxC2B,MAAM,UAAY3B,EAAO,iCAE1B,MAAOM,GACNmB,QAAQC,IAAIpB,GAGb,EAAKR,cA7EL,EAAKU,MAAQ,CACZR,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,QAAS,GACTyB,aAAa,IAAIC,MAAOC,iBACxB1B,OAAQ,IARI,E,qDAmFJ,IAAD,OACAA,EAAW2B,KAAKvB,MAAhBJ,OACR,OACC,uBAAM4B,SAAUD,KAAK1B,aAArB,UACED,EAAO6B,KAAI,SAAAC,GAAK,OAChB,0CAAyBA,IAAfA,MAGX,sBAAKC,MAAM,SAAX,UACC,sBAAKA,MAAM,aAAX,UACC,uBAAOC,IAAI,OAAX,mBACA,uBACCC,MAAON,KAAKvB,MAAMR,KAClBsC,SAAU,SAAAC,GAAG,OAAI,EAAKxC,SAAS,CAAEC,KAAMuC,EAAIC,OAAOH,SAClDI,KAAK,OACLC,UAAQ,OAIV,sBAAKP,MAAM,aAAX,UACC,uBAAOC,IAAI,QAAX,oBACA,uBACCC,MAAON,KAAKvB,MAAMP,MAClBqC,SAAU,SAAAC,GAAG,OAAI,EAAKxC,SAAS,CAAEE,MAAOsC,EAAIC,OAAOH,SACnDI,KAAK,YAIP,sBAAKN,MAAM,QAAX,UACC,uBAAOC,IAAI,QAAX,oBACA,uBACCC,MAAON,KAAKvB,MAAMN,MAClBoC,SAAU,SAAAC,GAAG,OAAI,EAAKxC,SAAS,CAAEG,MAAOqC,EAAIC,OAAOH,SACnDI,KAAK,QACLC,UAAQ,OAIV,sBAAKP,MAAM,QAAX,UACC,uBAAOC,IAAI,UAAX,sBACA,0BACCC,MAAON,KAAKvB,MAAML,QAClBmC,SAAU,SAAAC,GAAG,OAAI,EAAKxC,SAAS,CAAEI,QAASoC,EAAIC,OAAOH,SACrDM,KAAK,IACLD,UAAQ,UAKX,wBAAQD,KAAK,SAASN,MAAM,UAA5B,2B,GAvIiBS,IAAMC,WA+I3BpD,IAASC,OAAO,cAACG,EAAD,IAAYF,SAASC,eAAe,mB","file":"static/js/main.11239425.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\n\n//Body\nconst myfirstelement = <h3>Hello React!</h3>\nReactDOM.render(myfirstelement, document.getElementById('root'));\n\n//Conatct\nclass MyForm extends React.Component {\n\n\t//Setters & Getters\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tname: \"\",\n\t\t\tphone: \"\",\n\t\t\temail: \"\",\n\t\t\tmessage: \"\",\n\t\t\tcurDateTime: new Date().toLocaleString(),\n\t\t\terrors: []\n\t\t};\n\t}\n\n\tresetForm = () => {\n\t\tthis.setState({\n\t\t\tname: \"\",\n\t\t\tphone: \"\",\n\t\t\temail: \"\",\n\t\t\tmessage: \"\",\n\n\t\t\terrors: []\n\t\t});\n\t}\n\n\t//Action\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tconst { name, phone, email, message } = this.state;\n\n\t\tconst errors = validate(name, email, message);\n\t\tif (errors.length > 0) {\n\t\t\tthis.setState({ errors });\n\t\t\treturn;\n\t\t}\n\n\t\t// submit the data...\t\t\n\t\ttry {\n\n\t\t\t/* Post to sample Api\n\t\t\tlet result = fetch('https://webhook.site/90ec52c2-8058-49c4-b581-e6ebd1decabf', {\n\t\t\t\tmethod: 'post',\n\t\t\t\tmode: 'no-cors',\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tname: name,\n\t\t\t\t\tphone: phone,\n\t\t\t\t\temail: email,\n\t\t\t\t\tmessage: message,\n\t\t\t\t\tupdated: this.state.curDateTime\n\t\t\t\t})\n\t\t\t});\n\t\t\t*/\n\n\t\t\tlet result = fetch('https://fn.ayitech.org/.netlify/functions/sendMail', {\n\t\t\t\tmethod: 'post',\n\t\t\t\tmode: 'no-cors',\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tmessage: message,\n\t\t\t\t\tsenderEmail: email,\n\t\t\t\t\tsenderName: name,\n\t\t\t\t\tsenderPhone: phone,\n\t\t\t\t\temailTo: 'charles.aryee@yahoo.com'\n\t\t\t\t})\n\t\t\t});\n\n\t\t\tconsole.log(result + 'Thanks ' + name + ', your inquiry has been sent.');\n\t\t\talert('Thanks ' + name + ', your inquiry has been sent.');\n\t\t}\n\t\tcatch (e) {\n\t\t\tconsole.log(e)\n\t\t}\n\n\t\tthis.resetForm();\n\t};\n\n\t//UI\n\trender() {\n\t\tconst { errors } = this.state;\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t{errors.map(error => (\n\t\t\t\t\t<div key={error}>Error: {error}</div>\n\t\t\t\t))}\n\n\t\t\t\t<div class='fields'>\n\t\t\t\t\t<div class='field half'>\n\t\t\t\t\t\t<label for='Name'>Name:</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\tonChange={evt => this.setState({ name: evt.target.value })}\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class='field half'>\n\t\t\t\t\t\t<label for='Phone'>Phone:</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tvalue={this.state.phone}\n\t\t\t\t\t\t\tonChange={evt => this.setState({ phone: evt.target.value })}\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class='field'>\n\t\t\t\t\t\t<label for='Email'>Email:</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\tonChange={evt => this.setState({ email: evt.target.value })}\n\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class='field'>\n\t\t\t\t\t\t<label for='Message'>Message:</label>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tvalue={this.state.message}\n\t\t\t\t\t\t\tonChange={evt => this.setState({ message: evt.target.value })}\n\t\t\t\t\t\t\trows='4'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<button type='submit' class='primary'>Submit</button>\n\t\t\t</form>\n\n\t\t);\n\t}\n\n}\n\nReactDOM.render(<MyForm />, document.getElementById('contact-form'));\n//======================================================================\n\n//Form Validator\n//Ref: https://goshakkk.name/submit-time-validation-react/\nfunction validate(name, email, message) {\n\t// we are going to store errors for all fields\n\t// in a single array\n\tconst errors = [];\n\n\tif (name.length === 0) {\n\t\terrors.push(\"Name is required!\");\n\t}\n\n\tif (email.length < 1 || !email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n\t\terrors.push(\"A valid email address is required!\");\n\t}\n\n\tif (message.length < 1) {\n\t\terrors.push(\"Message is required!\");\n\t}\n\n\treturn errors;\n}\n\n\n"],"sourceRoot":""}